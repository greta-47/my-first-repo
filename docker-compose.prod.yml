version: '3.8'

services:
  # One-shot migration job (runs before API starts, uses same image as API)
  migrate:
    image: ghcr.io/greta-47/my-first-repo:latest
    entrypoint: ["/app/scripts/migrate.sh"]
    env_file:
      - .env.prod
    environment:
      - APP_ENV=production
    depends_on:
      - db
    restart: "no"

  # Main API service
  api:
    image: ghcr.io/greta-47/my-first-repo:latest
    ports:
      - "8000:8000"
    env_file:
      - .env.prod
    environment:
      - APP_ENV=production
      - DB_AUTO_MIGRATE=false
      - STRICT_STARTUP=true
    depends_on:
      migrate:
        condition: service_completed_successfully
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Local PostgreSQL (for testing only - use Digital Ocean Managed Postgres in production)
  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=recoveryos
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_DB=recoveryos
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U recoveryos"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
