name: Projects V2 Sync

on:
  issues:
    types: [opened, edited, labeled, unlabeled]
<<<<<<< HEAD
  pull_request_target:               # secrets work for PRs (incl. forks)
    types: [opened, edited, labeled, unlabeled, ready_for_review]
=======
  pull_request_target:
    types: [opened, edited, labeled, unlabeled, ready_for_review, reopened, synchronize]
>>>>>>> origin/main
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue or PR number to sync (optional for manual runs)'
        required: false
        type: string

permissions: {}                      # keep GITHUB_TOKEN minimal

concurrency:
  group: projects-sync-${{ github.event_name }}-${{ inputs.issue_number || github.event.issue.number || github.event.pull_request.number || 'manual' }}
  cancel-in-progress: true

jobs:
  sync-to-project:
    if: github.repository_owner == 'greta-47'   # safety: only run in your repo
    runs-on: ubuntu-latest
    env:
<<<<<<< HEAD
      GH_TOKEN: ${{ secrets.PROJECTS_TOKEN }}   # PAT classic with `repo` + `project`
      PROJECT_ID: ${{ secrets.PROJECT_ID }}     # PVT_... (preferred)
      PROJECT_OWNER: "greta-47"                 # fallback if PROJECT_ID missing
      PROJECT_NUMBER: "1"                       # fallback if PROJECT_ID missing
=======
      GH_TOKEN:       ${{ secrets.PROJECTS_TOKEN }}   # PAT classic with "project" scope
      PROJECT_ID:     ${{ secrets.PROJECT_ID }}       # preferred path: direct PVT_... id
      PROJECT_OWNER:  "greta-47"                      # fallback if you don’t use PROJECT_ID
      PROJECT_NUMBER: "1"                             # fallback if you don’t use PROJECT_ID
>>>>>>> origin/main
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
<<<<<<< HEAD
          python-version: "3.12.5"

      - name: Pin toolchain & install deps
        run: |
          python -m pip install -U pip==24.2
          python -m pip install requests

      - name: Preflight: verify PROJECTS_TOKEN works
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PROJECTS_TOKEN }}
          script: |
            const r = await github.graphql('query { viewer { login } rateLimit { remaining } }');
            core.info(`Auth OK as ${r.viewer.login}; remaining=${r.rateLimit.remaining}`);
=======
          python-version: "3.12"
      - name: Pin deps
        run: python -m pip install -U pip==24.2 requests
>>>>>>> origin/main

      - name: Sync to Project V2
        run: python scripts/projects_sync.py
        env:
          # If manual run, let the user supply the number; otherwise pull from event
          ISSUE_NUMBER: ${{ inputs.issue_number || github.event.issue.number || github.event.pull_request.number || '' }}
          ISSUE_URL:    ${{ github.event.issue.html_url || github.event.pull_request.html_url || '' }}

          # Owners/names are not always present on workflow_dispatch; use repository_owner
          REPO_OWNER:   ${{ github.repository_owner }}

          # Repo name can be absent on some events; we’ll parse GITHUB_REPOSITORY in the script as a fallback
          REPO_NAME:    ${{ github.event.repository.name || github.event.pull_request.head.repo.name || '' }}

          # Always available; script will split this if REPO_NAME is empty
          GITHUB_REPOSITORY: ${{ github.repository }}
