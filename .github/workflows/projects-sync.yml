name: Projects V2 Sync

on:
  issues:
    types: [opened, edited, labeled, unlabeled]
  pull_request_target:
    types: [opened, edited, labeled, unlabeled, ready_for_review, reopened, synchronize]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue or PR number to sync (optional for manual runs)'
        required: false
        type: string

concurrency:
  group: projects-sync-${{ github.event_name }}-${{ inputs.issue_number || github.event.issue.number || github.event.pull_request.number || 'manual' }}
  cancel-in-progress: true

jobs:
  sync-to-project:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN:       ${{ secrets.PROJECTS_TOKEN }}   # PAT with 'project' scope
      PROJECT_ID:     ${{ secrets.PROJECT_ID }}       # preferred: the PVT_* id
      PROJECT_OWNER:  "greta-47"                      # fallback if PROJECT_ID unset
      PROJECT_NUMBER: "1"                             # fallback if PROJECT_ID unset
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          fetch-depth: 1

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Sync to Project V2
        run: python scripts/projects_sync.py
        env:
          # If manual run, let the user supply the number; otherwise pull from event
          ISSUE_NUMBER: ${{ inputs.issue_number || github.event.issue.number || github.event.pull_request.number || '' }}
          ISSUE_URL:    ${{ github.event.issue.html_url || github.event.pull_request.html_url || '' }}

          # Owners/names are not always present on workflow_dispatch; use repository_owner
          REPO_OWNER:   ${{ github.repository_owner }}

          # Repo name can be absent on some events; script will split GITHUB_REPOSITORY as a fallback
          REPO_NAME:    ${{ github.event.repository.name || github.repository || '' }}

          # Always available; script can split if REPO_NAME is empty
          GITHUB_REPOSITORY: ${{ github.repository }}
